{"version":3,"sources":["App.js","actions/index.js","constants.js","reducers/index.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","date","addReminder","charAt","toUpperCase","slice","setState","document","getElementById","value","id","_this2","focus","toString","className","setTimeout","deleteReminder","_this3","react_default","a","createElement","reminders","map","reminder","key","moment","Date","fromNow","type","onClick","completeTask","_this4","href","target","placeholder","onChange","event","onKeyPress","preventDefault","renderReminders","clearReminders","Component","connect","action","Math","random","arguments","length","undefined","read_cookie","concat","toConsumableArray","bake_cookie","filter","item","store","createStore","reducer","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.656b0d44.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addReminder, deleteReminder, clearReminders } from \"./actions\";\nimport moment from \"moment\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            date: null\n        }\n    }\n\n    addReminder() {\n        this.props.addReminder(this.state.text.charAt(0).toUpperCase() + this.state.text.slice(1), this.state.date);\n        this.setState({ text: \"\" });\n        document.getElementById(\"task-field\").value = \"\";\n    }\n\n    deleteReminder(id) {\n        document.getElementById(\"task-field\").focus();\n        document.getElementById(id.toString()).className += \" deleting\"\n        setTimeout(() => this.props.deleteReminder(id), 500);\n    }\n\n    completeTask(id) {\n        document.getElementById(\"task-field\").focus();\n        document.getElementById(id).className += \" completed list-group-item-success\";\n    }\n\n    renderReminders() { //probably should make a new component for this section\n        return (\n            <ul className=\"list-group\">\n                {\n                    this.props.reminders.map((reminder) => {\n                        return (\n                            <li id={reminder.id.toString()} key={reminder.id} className=\"list-group-item\">\n                                <div className=\"item\">\n                                    <h5 className=\"list-item\">{reminder.text}</h5>\n                                    <h6 className=\"list-item\">{moment(new Date(reminder.date)).fromNow()}</h6>\n                                    <div className=\"list-item buttons\">\n                                        <button type=\"button\" className=\"btn btn-success btn-outline\" onClick={() => this.completeTask(reminder.id.toString())}>&#x2714;</button>\n                                        <button id=\"delete-button\" type=\"button\" className=\"btn btn-danger btn-outline\" onClick={() => this.deleteReminder(reminder.id)}>&#x2326;</button>\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>To Do List</h1>\n                <a href=\"https://github.com/marcelofinamorvieira/to-do-list\" target=\"__blank\">Github Repository</a>\n                <form>\n                    <input id=\"task-field\" className=\"form-control\" type=\"text\" placeholder=\"Type your task\"\n                        onChange={(event) => this.setState({ text: event.target.value })}\n                        onKeyPress={(event) => {\n                            if (event.key === \"Enter\") {\n                                event.preventDefault();\n                                this.addReminder();\n                            }\n                        }}\n                    />\n                    <input className=\"form-control\" type=\"datetime-local\" onChange={(event) => this.setState({date: event.target.value})}\n                    onKeyPress={(event) => {\n                        if (event.key === \"Enter\") {\n                            event.preventDefault();\n                            this.addReminder();\n                        }\n                    }} />\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.addReminder()}>Add Task</button>\n                </form>\n                {this.renderReminders()}\n                <button id=\"delete-all-button\" type=\"button\" className=\"btn btn-danger\" onClick={() => this.props.clearReminders()}>Delete All Reminders</button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        reminders: state\n    }\n}\n\nexport default connect(mapStateToProps, { addReminder, deleteReminder, clearReminders })(App);","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from \"../constants.js\";\n\nexport const addReminder = (text, date) => {\n    return {\n        type: ADD_REMINDER,\n        text,\n        date\n    }\n}\n\nexport const deleteReminder = (id) => {\n    return {\n        type: DELETE_REMINDER,\n        id\n    }\n}\n\nexport const clearReminders = () => {\n    return {\n        type: CLEAR_REMINDERS\n    }\n}","export const ADD_REMINDER = \"ADD_REMINDER\";\nexport const DELETE_REMINDER = \"DELETE_REMINDER\";\nexport const CLEAR_REMINDERS = \"CLEAR_REMINDERS\";","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from \"../constants.js\";\nimport { bake_cookie, read_cookie } from \"sfcookies\";\n\nconst reminder = (action) => {\n    return {\n        text: action.text,\n        date: action.date,\n        id: Math.random()\n    }\n}\n\nconst reminders = (state = [], action) => {\n    let reminders = null;\n    state = read_cookie(\"reminders\");\n    switch(action.type) {\n        case ADD_REMINDER:\n            reminders = [...state, reminder(action)];\n            bake_cookie(\"reminders\", reminders);\n            return reminders;\n        case DELETE_REMINDER:\n            reminders = state.filter(item => item.id !== action.id);\n            bake_cookie(\"reminders\", reminders);\n            return reminders;\n        case CLEAR_REMINDERS:\n            reminders = [];\n            bake_cookie(\"reminders\", reminders);\n            return reminders;\n        default:\n            return state;\n    }\n}\n\nexport default reminders;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport \"./App.css\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById(\"root\")\n);"],"sourceRoot":""}